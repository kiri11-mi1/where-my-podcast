import re
import pytube
import json
import os


def write_json(data, filename='response.json'):
    with open(filename, 'w') as file:
        json.dump(data, file, indent=2, ensure_ascii=False)

def is_url(url):
    template = r'https?://(?:www\.)?youtube\.com[^&\s]+(?=\s|$)'
    if re.search(template, url):
        return True
    return False

def parse_name_content(name):
        return ', '.join(re.findall(r"\d+fps|video/\w+|\d+p|\d+kbps|audio/\w+", name))

def get_content_buttons(cfg):
    buttons = []
    try:
        content = pytube.YouTube(cfg.CONTENT_URL)

    except pytube.exceptions.RegexMatchError:
        # –í–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–µ–∫—Å—Ç
        return '‚ùóÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π URL', None

    except json.decoder.JSONDecodeError:
        # –í–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫—É
        return '‚ö†Ô∏è –ù–µ—É–¥–∞—á–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, —Ç—ã–∫–Ω–∏—Ç–µ –ø–æ –∫–Ω–æ–∫–µ, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É',\
                json.dumps({'inline_keyboard': [
                    { 'text': 'üîÉ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë', 'callback_data': 'repeat' }
                    ]})
    
    cfg.CONTENT = content.streams.filter(type=cfg.CONTENT_TYPE).all()

    for i, val in enumerate(cfg.CONTENT):
        buttons.append([{ 'text': f'‚úÖ {parse_name_content(str(val))}', 'callback_data': i }])
    
    return '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∞–º –Ω—É–∂–µ–Ω:', json.dumps({'inline_keyboard': buttons})


def is_admin(username):
    if username == 'kiri11_mi1':
        return True
    return False


def handle(last_upd, bot, cfg):

    keyboard = None

    if 'message' in last_upd:

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏
        chat_id = last_upd['message']['chat']['id']  
        
        if 'text' in last_upd['message']:
            user_name = last_upd['message']['chat']['first_name']
            chat_text = last_upd['message']['text']

            # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–æ–≤
            if chat_text == '/help':
                text = f'–•–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ? –¢—ã–∫–Ω–∏ ‚û°Ô∏è /load_audio\
                        \n–•–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ? –¢—ã–∫–Ω–∏ ‚û°Ô∏è /load_video'

            elif chat_text in ['/load_audio', '/load_video']:
                cfg.CONTENT_TYPE = chat_text.replace('/load_', '')
                if cfg.CONTENT_URL:
                    # –ù–∞–ø–∏—Å–∞—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–≤–æ–¥–∞ –≤—Å–µx –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ
                    text, keyboard = get_content_buttons(cfg)
                    #print(cfg.CONTENT_TYPE, cfg.CONTENT_URL)
                    cfg.CONTENT_TYPE, cfg.CONTENT_URL = None, None
                else:
                    text = '–í–≤–µ–¥–∏—Ç–µ URL –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å YouTube...'

            elif is_url(chat_text):
                cfg.CONTENT_URL = chat_text
                if cfg.CONTENT_TYPE:
                    # –ù–∞–ø–∏—Å–∞—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–≤–æ–¥–∞ –≤—Å–µx –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ
                    text, keyboard = get_content_buttons(cfg)
                    #print(cfg.CONTENT_TYPE, cfg.CONTENT_URL)
                    cfg.CONTENT_TYPE, cfg.CONTENT_URL = None, None
                else:
                    text = f'–•–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ? –¢—ã–∫–Ω–∏ ‚û°Ô∏è /load_audio\
                        \n–•–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ? –¢—ã–∫–Ω–∏ ‚û°Ô∏è /load_video'

            else:
                text = f"{user_name}, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —Ç—ã–∫–Ω–∏ ‚û°Ô∏è /help"

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—Ç–≤–µ—Ç
            bot.send_message(chat_id=chat_id, text=text, reply_markup=keyboard)

        if 'audio' in last_upd['message'] and \
           is_admin(last_upd['message']['from']['username']):
            file_id = last_upd['message']['audio']['file_id']
            bot.send_audio(cfg.CHAT_ID, file_id)

        if 'video' in last_upd['message'] and \
           is_admin(last_upd['message']['from']['username']):
            file_id = last_upd['message']['video']['file_id']
            bot.send_video(cfg.CHAT_ID, file_id)
        
        if 'document' in last_upd['message'] and \
           is_admin(last_upd['message']['from']['username']):
            file_id = last_upd['message']['document']['file_id']
            bot.send_document(cfg.CHAT_ID, file_id)

    
    elif 'callback_query' in last_upd:

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        callback_data = last_upd['callback_query']['data']
        chat_id = last_upd['callback_query']['message']['chat']['id']

        if callback_data == 'repeat':
            # –ü—Ä–æ–ø–∏—Å–∞—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            pass

        else:
            if cfg.CONTENT:
                text = f'üëç –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!'
                cfg.CONTENT[int(callback_data)].download('content')

                filename = cfg.CONTENT[int(callback_data)].title.replace(' ', '\ ')
                filename = filename.replace('#', '')
                filename = filename.replace(':', '')

                mime_type, ext = cfg.CONTENT[int(callback_data)].mime_type.split('/')

                if mime_type == 'audio':
                    os.system(f"ffmpeg -i content/{filename}.{ext} content/result.mp3 -y")
                    #print('26\ CSGO\ -\ –í–µ—Ä—Ç—É—à–∫–∏\ –∞–≤–∞–ø–µ—Ä–∞.webm' == f'{filename}.{ext}')
                    os.system("python client.py content/result.mp3")
                
                elif mime_type == 'video':
                    os.system(f"python client.py content/{filename}.{ext}")

                
                cfg.CHAT_ID = chat_id
                
                # print(f'{filename}.{ext}')
                # os.system(f"rm content/{filename}.{ext}")

                cfg.CONTENT = None

            else:
                text = f'‚ö†Ô∏è –¢–∞–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–π–¥–∏—Ç–µ –≤—Å–µ —à–∞–≥–∏ –∑–∞–Ω–æ–≤–æ!'

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—Ç–≤–µ—Ç
        bot.send_message(chat_id=chat_id, text=text, reply_markup=keyboard)

